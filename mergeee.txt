#include <iostream>
#include <graphics.h>
#include <winbgim.h>
#include <stdlib.h>
using namespace std;
int numar, width, height, latura, sus, stanga;
double TablaDeJoc[1000][1000];
int skinVulpe = 1;
int skinCaine = 4;
void Backtomenu()
{               char sir[30];

                setcolor(1);
                settextstyle(8, HORIZ_DIR,3);
                strcpy(sir, "MENIU");
	            outtextxy(750, 560, sir);

}
void Backtodificultate()
{
                char sir[30];

                setcolor(1);
                settextstyle(8, HORIZ_DIR,3);
                strcpy(sir, "BACK");
	            outtextxy(750, 560, sir);

}
void VulpeaCastiga()
{
    cleardevice();
readimagefile("fox-revived.jpg", stanga + latura * (1 - 1), sus + latura * (1 - 1), (stanga + latura) + latura * (9 - 1), (sus + latura) + latura * (9- 1));
}
void RandulCainilor()
{        char sir[30];
                setcolor(RED);
				setfillstyle(SOLID_FILL,RED);
                bar(900,260,780,280);
                setcolor(0);
                settextstyle(8, HORIZ_DIR, 2);
                strcpy(sir, "Cainii muta");
	            outtextxy(740, 260, sir);



}
void RandulVulpei()
{        char sir[30];
                setcolor(RED);
				setfillstyle(SOLID_FILL,RED);
                bar(900,260,780,280);
                setcolor(0);
                settextstyle(8, HORIZ_DIR, 2);
                strcpy(sir, "Vulpea muta");
	            outtextxy(740, 260, sir);


}
void DisplayCharacters()
{
	for (int i = 1; i <= 8; i++)
		for (int j = 1; j <= 8; j++)
			if (TablaDeJoc[i][j] == 2) //Valoarea 2 pentru vulpe
            {
                if(skinVulpe == 1){
                    readimagefile("Fox1.gif", stanga + latura * (j - 1), sus + latura * (i - 1), (stanga + latura) + latura * (j - 1), (sus + latura) + latura * (i - 1));
                }
                if(skinVulpe == 2){
                    readimagefile("Fox2.gif", stanga + latura * (j - 1), sus + latura * (i - 1), (stanga + latura) + latura * (j - 1), (sus + latura) + latura * (i - 1));
                }
                if(skinVulpe == 3){
                    readimagefile("Fox3.gif", stanga + latura * (j - 1), sus + latura * (i - 1), (stanga + latura) + latura * (j - 1), (sus + latura) + latura * (i - 1));
                }
            }
			else
				if (TablaDeJoc[i][j] == 1) //Valoarea 1 pentru caini
                {
                    if(skinCaine == 4){
                        readimagefile("Dog4.gif", stanga + latura * (j - 1), sus + latura * (i - 1), (stanga + latura) + latura * (j - 1), (sus + latura) + latura * (i - 1));
                    }
                    if(skinCaine == 5){
                        readimagefile("Dog5.gif", stanga + latura * (j - 1), sus + latura * (i - 1), (stanga + latura) + latura * (j - 1), (sus + latura) + latura * (i - 1));
                    }
                    if(skinCaine == 6){
                        readimagefile("Dog6.gif", stanga + latura * (j - 1), sus + latura * (i - 1), (stanga + latura) + latura * (j - 1), (sus + latura) + latura * (i - 1));
                    }
                }
}
void AfisareMutari(int linia, int coloana) //Sageti care indica unde se poate efectua mutarea
{
	int x1, y1, x2, y2,a,b;
	int xmijloc, ymijloc;
	int x, y;
	setcolor(RED);
	setfillstyle(SOLID_FILL, RED); //void setfillstyle(int pattern, int color);
	x1 = stanga + latura * (coloana - 1); //coloana = j
	y1 = sus + latura * (linia - 1); //linia = i
	x2 = x1 + latura;
	y2 = y1 + latura;
	xmijloc = (x1 + x2) / 2;
	ymijloc = (y1 + y2) / 2;
	setlinestyle(SOLID_LINE, 2, 8); //void setlinestyle(int linestyle, unsigned upattern, int thickness);
	a=linia;
	b=coloana;
	if (TablaDeJoc[linia][coloana] == 1)

		if (a - 1 >= 1 && b - 1 >= 1 && TablaDeJoc[a - 1][b - 1] == 0)
            line(xmijloc, ymijloc, xmijloc - 50, ymijloc - 50);
		if (a - 1 >= 1 && b + 1 <= 8 && TablaDeJoc[a - 1][b + 1] == 0)
              line(xmijloc, ymijloc, xmijloc + 50, ymijloc - 50);

	if (TablaDeJoc[linia][coloana] == 2)
	{

		if (a - 1 >= 1 && b - 1 >= 1 && TablaDeJoc[a - 1][b - 1] == 0)
            line(xmijloc, ymijloc, xmijloc - 50, ymijloc - 50);
		if (a - 1 >= 1 && b + 1 <= 8 && TablaDeJoc[a - 1][b + 1] == 0)
            line(xmijloc, ymijloc, xmijloc + 50, ymijloc - 50);
		if (a + 1 <= 8 && b - 1 >= 1 && TablaDeJoc[a + 1][b - 1] == 0)
            line(xmijloc, ymijloc, xmijloc - 50, ymijloc + 50);
		if (a + 1 <= 8 && b + 1 <= 8 && TablaDeJoc[a + 1][b + 1] == 0)
            line(xmijloc, ymijloc, xmijloc + 50, ymijloc + 50);
	}
	DisplayCharacters();
}
void meniu()
{
    clearviewport();
	char sir[30];
	bar(290, 80, 510, 155);         // void bar (int left, int top, int right, int bottom);
	strcpy(sir, "MENIU");
	setcolor(RED);
	settextstyle(8, HORIZ_DIR, 18); // void settextstyle (int font, int direction, int charsize);
	outtextxy(300, 85, sir);       //void outtextxy (int x, int y, char *textstring);
	settextstyle(9, HORIZ_DIR, 13);
	strcpy(sir, "CALCULATOR VS JUCATOR");
	outtextxy(200, 185, sir);
	strcpy(sir, "JUCATOR VS JUCATOR");
	outtextxy(230, 255, sir);
	strcpy(sir, "SKINS");
	outtextxy(358, 325, sir);
	strcpy(sir, "CUM TE JOCI?");
	outtextxy(300, 395, sir);
	strcpy(sir, "SETARI");
	outtextxy(350, 465, sir);
}
void Tabla()
{
	int i, j, x, a, b, c, d;
	numar = 8;
	width = 560;
	height = 560;
	latura = width / numar; //latura = 70;
	sus = (getmaxy() - width) / 2; //sus = 19;
	stanga = (getmaxx() - height) / 2; //stanga = 119;
	setbkcolor(RED);                  //void setbkcolor(int color);
	clearviewport();
	setcolor(0);                    //void setcolor (int color); 0 = BLACK;
	for (i = 1; i <= numar; i++)
	{
		x++;
		for (j = 1; j <= numar; j++) //j = linie, i = coloana;
		{
			if (x % 2 == 0)
			{
				setcolor(0);
				setfillstyle(SOLID_FILL, 0); //void setfillstyle(int pattern, int color); 15 = WHITE;
			}
			else
			{
				setcolor(15);
				setfillstyle(SOLID_FILL, 15);
			}
			bar(stanga + latura * (i - 1), sus + latura * (j - 1), stanga + latura * (i - 1) + latura, sus + latura * (j - 1) + latura);
			x++;
		}
	}
	TablaDeJoc[8][1] = 1;
	TablaDeJoc[8][3] = 1;
	TablaDeJoc[8][5] = 1;
	TablaDeJoc[8][7] = 1;
	TablaDeJoc[1][4] = 2;
	DisplayCharacters();
}
void PunerePiese()
{
	int i, j;
	int x1, y1, x2, y2;
	int xmijloc, ymijloc;
	int linia, coloana, x = 0, y;
	numar = 8;
	width = 560;
	height = 560;
	latura = width / numar;
	sus = (getmaxy() - width) / 2; //19;
	stanga = (getmaxx() - height) / 2; //119;
	for (i = 1; i <= numar; i++)
	{
		x++;
		for (j = 1; j <= numar; j++)
		{
			if (x % 2 == 0)
			{
				setcolor(0);
				setfillstyle(SOLID_FILL, 0);
			}
			else
			{
				setcolor(15);
				setfillstyle(SOLID_FILL, 15);
			}
			bar(stanga + latura * (i - 1), sus + latura * (j - 1), stanga + latura * (i - 1) + latura, sus + latura * (j - 1) + latura);
			x++;
		}
	}
	DisplayCharacters();
}
bool CainiAuCastigat()
{
	int a, b, i, j;
	for (i = 1; i <= 8; i++)
		for (j = 1; j <= 8; j++)
			if (TablaDeJoc[i][j] == 2) { a = i; b = j; }
	int nr = 0;
	if (a - 1 >= 1 && b - 1 >= 1 && TablaDeJoc[a - 1][b - 1] == 0)
		nr++;
	if (a - 1 >= 1 && b + 1 <= 8 && TablaDeJoc[a - 1][b + 1] == 0)
		nr++;
	if (a + 1 <= 8 && b - 1 >= 1 && TablaDeJoc[a + 1][b - 1] == 0)
		nr++;
	if (a + 1 <= 8 && b + 1 <= 8 && TablaDeJoc[a + 1][b + 1] == 0)
		nr++;
	if (nr == 0)
		return true;
	else
        return false;
}
bool VulpeaACastigat()
{
	int a, b, i, j,ok=0;
	for (i = 1; i <= 8; i++)
		for (j = 1; j <= 8; j++)
			if (TablaDeJoc[i][j] == 2) { a = i; b = j; }
			else if(TablaDeJoc[i][j]==1)if((i-1>=1&&j-1>=1&&TablaDeJoc[i-1][j-1]==0)||(i-1>=1&&j+1<=8&&TablaDeJoc[i-1][j+1]==0))ok=1;
	if (a == 8||ok==0){VulpeaCastiga();
		return true;}


	else
		return false;
}
void JucatorVsJucator()
{
	int x1, y1, x2, y2;
	int xmijloc, ymijloc;
	int linia, coloana, x, y, linia1, coloana1;
	int nr = 0, ok, gata = 1;


    Tabla();
    Backtomenu();
	while (gata)
	{
	     RandulCainilor();
		while (nr % 2 == 0)
		{if (ismouseclick(WM_LBUTTONDOWN))
			{
				ok = 1;
				clearmouseclick(WM_LBUTTONDOWN);
				x = mousex();
				y = mousey();
				linia = (y - sus) / latura + 1;
				coloana = (x - stanga) / latura + 1;
                if(x>=752&&x<=821&&y>=564&&y<=581){gata=0;cleardevice(); meniu();nr++;}
                else
				if (TablaDeJoc[linia][coloana] == 1)
				{
					AfisareMutari(linia, coloana);
					while (ok == 1)
						if (ismouseclick(WM_LBUTTONDOWN))
						{
							clearmouseclick(WM_LBUTTONDOWN);
							x = mousex();
							y = mousey();
							linia1 = (y - sus) / latura + 1;
							coloana1 = (x - stanga) / latura + 1;
							if (((coloana1 == coloana + 1 && linia1 == linia - 1) || (coloana1 == coloana - 1 && linia1 == linia - 1)) && TablaDeJoc[linia1][coloana1] == 0)
							{
								TablaDeJoc[linia][coloana] = 0;
								TablaDeJoc[linia1][coloana1] = 1;
								nr++;
							}
							ok = 0;
						}
					PunerePiese();
				}
			}
		}
		if (CainiAuCastigat())
            {
                gata = 0;
                cout << "Cainii au castigat!";
            }
		else if(gata!=0)
			if (VulpeaACastigat())
            {
                gata = 0;

            }
			else
			{   RandulVulpei();
				ok = 1;
				while (nr % 2 == 1)
					if (ismouseclick(WM_LBUTTONDOWN))
					{
						clearmouseclick(WM_LBUTTONDOWN);
						x = mousex();
						y = mousey();
						linia = (y - sus) / latura + 1;
						coloana = (x - stanga) / latura + 1;
						if(x>=752&&x<=821&&y>=564&&y<=581){gata=0;cleardevice();meniu();nr++;}
                else
						if (TablaDeJoc[linia][coloana] == 2)
						{
							AfisareMutari(linia, coloana);
							while (ok == 1)
								if (ismouseclick(WM_LBUTTONDOWN))
								{
									clearmouseclick(WM_LBUTTONDOWN);
									x = mousex();
									y = mousey();
									linia1 = (y - sus) / latura + 1;
									coloana1 = (x - stanga) / latura + 1;
									if (((coloana1 == coloana + 1 && linia1 == linia + 1) || (coloana1 == coloana + 1 && linia1 == linia - 1) || (coloana1 == coloana - 1 && linia1 == linia + 1) || (coloana1 == coloana - 1 && linia1 == linia - 1)) && TablaDeJoc[linia1][coloana1] == 0)
									{
										TablaDeJoc[linia][coloana] = 0;
										TablaDeJoc[linia1][coloana1] = 2;
										nr++;
										ok = 0;
									}
								}
							PunerePiese();
						}
					}
				if (VulpeaACastigat())
				{
					gata = 0;

				}
			}
	}

}
/*JUCATOR VS CALCULATOR*/
void InitializareCalVSJuc()
{int a,b,OK=1;

    char sir[30];
    cleardevice();
	strcpy(sir, "Ce vrei sa fi?");
	setcolor(RED);
	settextstyle(8, HORIZ_DIR, 16);
	outtextxy(250, 85, sir);
	settextstyle(9, HORIZ_DIR, 13);
	setcolor(WHITE);
	strcpy(sir, "Caine");
	outtextxy(300, 185, sir);
	setcolor(YELLOW);
	strcpy(sir, "Vulpea");
	outtextxy(300, 235, sir);
	Backtomenu();

}
void InitializareDificultate()
{
     cleardevice();
     Backtodificultate();
    char sir[30];

    strcpy(sir, "Alege dificultatea");
    setcolor(RED);
    settextstyle(8, HORIZ_DIR, 16);
    outtextxy(250, 85, sir);
    settextstyle(9, HORIZ_DIR, 13);
    setcolor(WHITE);
    strcpy(sir, "USOR");
    outtextxy(300, 185, sir);
    setcolor(YELLOW);
    strcpy(sir, "GREU");
    outtextxy(300, 235, sir);
}
void CaineUsor()
{
	int x1, y1, x2, y2;
	int xmijloc, ymijloc;
	int linia, coloana, x, y, linia1, coloana1;
	int nr = 0, ok, gata = 1;
     for(int i=1;i<=8;i++)
        for(int j=1;j<=8;j++)
        TablaDeJoc[i][j]==0;
    TablaDeJoc[8][1] = 1;
	TablaDeJoc[8][3] = 1;
	TablaDeJoc[8][5] = 1;
	TablaDeJoc[8][7] = 1;
	TablaDeJoc[1][4] = 2;
    Tabla();
    Backtomenu();
	while (gata)
	{
		while (nr % 2 == 0)
		{
			if (ismouseclick(WM_LBUTTONDOWN))
			{
				ok = 1;
				clearmouseclick(WM_LBUTTONDOWN);
				x = mousex();
				y = mousey();
				linia = (y - sus) / latura + 1;
				coloana = (x - stanga) / latura + 1;
				 if(x>=752&&x<=821&&y>=564&&y<=581){cleardevice();meniu();gata=0;nr++;}
				 else
				if (TablaDeJoc[linia][coloana] == 1)
				{
					AfisareMutari(linia, coloana);
					while (ok == 1)
						if (ismouseclick(WM_LBUTTONDOWN))
						{
							clearmouseclick(WM_LBUTTONDOWN);
							x = mousex();
							y = mousey();
							linia1 = (y - sus) / latura + 1;
							coloana1 = (x - stanga) / latura + 1;
							if (((coloana1 == coloana + 1 && linia1 == linia - 1) || (coloana1 == coloana - 1 && linia1 == linia - 1)) && TablaDeJoc[linia1][coloana1] == 0)
							{
								TablaDeJoc[linia][coloana] = 0;
								TablaDeJoc[linia1][coloana1] = 1;
								nr++;
							}
							ok = 0;
						}
					PunerePiese();
				}
			}
		}
		if (CainiAuCastigat())
            {
                gata = 0;
                cout << "Cainii au castigat!";
            }
		else
			if (VulpeaACastigat())
            {
                gata = 0;
                cout << "Vulpea a castigat!";
            }
			else if(gata!=0)
			           { //cautam pozitia vulpei
			               int i,j;
			               for( i=1;i<=8;i++)
			               for( j=1;j<=8;j++)
                         if(TablaDeJoc[i][j]==2){linia=i;coloana=j;}
                        cout<<"linia="<<linia<<" coloana "<<coloana<<endl;
			               ok=0;
			             while(ok==0)
                          {
                              int random;
                              random=rand()%4;
                              cout<<random<<" ";
                              if(random==0)
                               {

                                if (linia - 1 >= 1 && coloana - 1 >= 1 && TablaDeJoc[linia - 1][coloana - 1] == 0)
                              {
                                  TablaDeJoc[linia][coloana]=0;
                                  TablaDeJoc[linia-1][coloana-1]=2;
                                  ok=1;

                              }}
                              else if(random==1)
                               {

                                if (linia - 1 >= 1 && coloana + 1 <=8  && TablaDeJoc[linia - 1][coloana +1] == 0)
                              {
                                  TablaDeJoc[linia][coloana]=0;
                                  TablaDeJoc[linia-1][coloana+1]=2;
                                  ok=1;

                              }
                              }else if(random==2)
                               {

                                if (linia + 1 <= 8 && coloana - 1 >= 1 && TablaDeJoc[linia + 1][coloana - 1] == 0)
                              {
                                  TablaDeJoc[linia+1][coloana-1]=2;
                                  TablaDeJoc[linia][coloana]=0;
                                  ok=1;
                              }}else

                                if (linia + 1 <= 8 && coloana + 1 <= 8 && TablaDeJoc[linia + 1][coloana + 1] == 0)
                              {
                                  TablaDeJoc[linia][coloana]=0;
                                  TablaDeJoc[linia+1][coloana+1]=2;
                                  ok=1;
                              }

                          }
                          nr++;
                          PunerePiese();

						}

				if (VulpeaACastigat())
				{
					gata = 0;
					cout << "Vulpea a castigat";
				}
			}
	}
void VulpeUsor()
{int x1, y1, x2, y2,a,b;
	int xmijloc, ymijloc;
	int linia, coloana, x, y, linia1, coloana1;
	int nr = 0, ok, gata = 1;

	while (gata)
	{
	    ok=0;
        while(ok==0)
        {int i,j,random;
        random=rand()%10;


                linia=0;
                for(i=1;i<=8;i++)if(TablaDeJoc[i][random]==1) linia=i;
                if(linia!=0)
                 {             int ran;
                                a=linia;
                                b=random;
                              ran=rand()%2;
                              cout<<ran<<" "<<random<<"  "<<linia<<endl;
                              if(ran==0)
		                          if (a - 1 >= 1 &&  b- 1 >= 1 && TablaDeJoc[a - 1][b - 1] == 0)
		                            {TablaDeJoc[linia][random] = 0;
								    TablaDeJoc[linia-1][random-1] = 1;
                                    nr++;
                                    ok=1;
                                    }
                                    else cout<<" ";
                                else if (a - 1 >= 1 && b + 1 <= 8 && TablaDeJoc[a - 1][b + 1] == 0)
                                          {
                                              TablaDeJoc[linia][random] = 0;
								              TablaDeJoc[linia-1][random+1] = 1;
								              nr++;
								              ok=1;
                                          }}



        }




					PunerePiese();


		if (CainiAuCastigat())
            {
                gata = 0;
                cout << "Cainii au castigat!";
            }
		else
			if (VulpeaACastigat())
            {
                gata = 0;
                cout << "Vulpea a castigat!";
            }
			else
			{
				ok = 1;
				while (nr % 2 == 1)
					if (ismouseclick(WM_LBUTTONDOWN))
					{
						clearmouseclick(WM_LBUTTONDOWN);
						x = mousex();
						y = mousey();
						linia = (y - sus) / latura + 1;
						coloana = (x - stanga) / latura + 1;
						if(x>=752&&x<=821&&y>=564&&y<=581){cleardevice();meniu();gata=0;nr++;}
						else
						if (TablaDeJoc[linia][coloana] == 2)
						{
							AfisareMutari(linia, coloana);
							while (ok == 1)
								if (ismouseclick(WM_LBUTTONDOWN))
								{
									clearmouseclick(WM_LBUTTONDOWN);
									x = mousex();
									y = mousey();
									linia1 = (y - sus) / latura + 1;
									coloana1 = (x - stanga) / latura + 1;
									if (((coloana1 == coloana + 1 && linia1 == linia + 1) || (coloana1 == coloana + 1 && linia1 == linia - 1) || (coloana1 == coloana - 1 && linia1 == linia + 1) || (coloana1 == coloana - 1 && linia1 == linia - 1)) && TablaDeJoc[linia1][coloana1] == 0)
									{
										TablaDeJoc[linia][coloana] = 0;
										TablaDeJoc[linia1][coloana1] = 2;
										nr++;
										ok = 0;
									}
								}
							PunerePiese();
						}

				if (VulpeaACastigat())
				{
					gata = 0;
					cout << "Vulpea a castigat";
				}
					}
	}

}}


void CalculatorVsJucator()
{ int a,b,OK=1,ok=1;

InitializareCalVSJuc();
	do
    {
		if (ismouseclick(WM_LBUTTONDOWN))
		{
			clearmouseclick(WM_LBUTTONDOWN);
			a = mousex();
			b = mousey();
            if(a>=752&&a<=821&&b>=564&&b<=581){cleardevice();meniu();OK=0;}
            else
			if ((a > 300 && a < 368 && b>187 && b < 205)&&OK==1)//CAINE
				{
                  InitializareDificultate();
				  do
                    {
                        if (ismouseclick(WM_LBUTTONDOWN))
		                  {
			                clearmouseclick(WM_LBUTTONDOWN);
			                a = mousex();
                            b = mousey();
                            if(a>=752&&a<=821&&b>=564&&b<=581){cleardevice();CalculatorVsJucator();ok=0;}
                            if (a > 300 && a < 368 && b>187 && b < 205)//CAINE USOR
                             {

                                  CaineUsor();ok=0;
                             }
                             else if(a > 300 && a < 368 && b>235 && b < 253)
                                    Tabla();
                             }
                    }
                    while(ok);
				}
			 if((a > 300 && a < 368 && b>235 && b < 253)&&OK==1)//VULPE
			{   InitializareDificultate();
			    OK=0;
			     do
                    {
                        if (ismouseclick(WM_LBUTTONDOWN))
		                  {
			                clearmouseclick(WM_LBUTTONDOWN);
			                a = mousex();
                            b = mousey();
                             if(a>=752&&a<=821&&b>=564&&b<=581){cleardevice();CalculatorVsJucator();ok=0;}
                            if (a > 300 && a < 368 && b>187 && b < 205)//CAINE USOR
                             {
                                 Tabla();
                                  VulpeUsor();
                             }
                             else if(a > 300 && a < 368 && b>235 && b < 253)
                                    Tabla();
                             }
                    }
                    while(ok);
			}
		}
	} while (OK);



}
void DisplaySkinsWindow(){

    setbkcolor(BLACK);
	clearviewport();
	char sir[30];
	setcolor(WHITE);
	strcpy(sir, "SKINS");
	settextstyle(9, HORIZ_DIR, 16);
	outtextxy(320, 100, sir);

	setcolor(WHITE);
	strcpy(sir, "BACK");
	settextstyle(9, HORIZ_DIR, 14);
	outtextxy(360, 450, sir);

    if(skinVulpe == 1){
        readimagefile("Fox1.gif", 40, 240, 160, 360);
    } else {
        readimagefile("Fox1.gif", 60, 260, 140, 340);
    }
    if(skinVulpe == 2){
        readimagefile("Fox2.gif", 150, 240, 270, 360);
    } else {
        readimagefile("Fox2.gif", 170, 260, 250, 340);
    }
    if(skinVulpe == 3){
        readimagefile("Fox3.gif", 260, 240, 380, 360);
    } else {
        readimagefile("Fox3.gif", 280, 260, 360, 340);
    }

    if(skinCaine == 4){
        readimagefile("Dog4.gif", 420, 240, 540, 360);
    } else {
        readimagefile("Dog4.gif", 440, 260, 520, 340);
    }
    if(skinCaine == 5){
        readimagefile("Dog5.gif", 530, 240, 650, 360);
    } else {
        readimagefile("Dog5.gif", 550, 260, 630, 340);
    }
    if(skinCaine == 6){
        readimagefile("Dog6.gif", 640, 240, 760, 360);
    } else {
        readimagefile("Dog6.gif", 660, 260, 740, 340);
    }
}

void SkinsWindow(){
    DisplaySkinsWindow();

    int a, b;
	do
	{
		if (ismouseclick(WM_LBUTTONDOWN))
		{
			clearmouseclick(WM_LBUTTONDOWN);
			a = mousex();
			b = mousey();
			if (a > 62 && a < 141 && b>264 && b < 336 && skinVulpe != 1){ // click pe primul skin
                skinVulpe = 1;
                DisplaySkinsWindow();
			}
			if (a > 176 && a < 248 && b>264 && b < 336  && skinVulpe != 2){ // click pe al doilea skin
                skinVulpe = 2;
                DisplaySkinsWindow();
			}
            if (a > 285 && a < 357 && b>264 && b < 336  && skinVulpe != 3){ // click pe al treilea skin
                skinVulpe = 3;
                DisplaySkinsWindow();
			}
            if (a > 453 && a < 508 && b>264 && b < 336  && skinCaine != 4){ // click pe al patrulea skin
                skinCaine = 4;
                DisplaySkinsWindow();
			}
            if (a > 553 && a < 629 && b>264 && b < 336 && skinCaine != 5){ // click pe al cincilea skin
                skinCaine = 5;
                DisplaySkinsWindow();
			}
            if (a > 661 && a < 739 && b>264 && b < 336 && skinCaine != 6){ // click pe al saselea skin
                skinCaine = 6;
                DisplaySkinsWindow();
			}
			if (a > 362 && a < 456 && b>453 && b < 467){ // click pe back
                meniu();
                return;
			}

		}
	} while (true);
}


int main()
{
initwindow(900,600);
meniu();
	int a, b;
	int m = 0,OK=1;
	do
	{
		if (ismouseclick(WM_LBUTTONDOWN))
		{
			clearmouseclick(WM_LBUTTONDOWN);
			a = mousex();
			b = mousey();
			if ((a > 220 && a < 600 && b>250 && b < 275)&&OK==1)
				{

				    JucatorVsJucator();
				}
            if (a > 360 && a < 445 && b > 325 && b < 345)
                    SkinsWindow();

			else if((a > 220 && a < 600 && b>185 && b < 205)&&OK==1)
			{CalculatorVsJucator();
			}

		}
	} while (1);
	getch();
	closegraph();
	return 0;

}
